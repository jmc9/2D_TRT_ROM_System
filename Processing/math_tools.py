#!/usr/bin/env python3
#==================================================================================================================================#
#
# Author: Joseph M. Coale
# jmcoale@ncsu.edu - josephcoale912@gmail.com
#
#==================================================================================================================================#
#importing packages
#==================================================================================================================================#
import numpy as np
import math

#==================================================================================================================================#
#
#==================================================================================================================================#
def relerr(x1,x2):
    e = abs((x1-x2)/x1)
    return e

#==================================================================================================================================#
#
#==================================================================================================================================#
def norm_inf(x):
    n = len(x)
    norm = 0.
    for i in range(n):
        if abs(x[i])>norm: norm = abs(x[i])

    return norm

#==================================================================================================================================#
#
#==================================================================================================================================#
def norm1(x):
    n = len(x)
    norm = 0.
    for i in range(n):
        norm = norm + abs(x[i])

    return norm

#==================================================================================================================================#
#
#==================================================================================================================================#
def normL1(x,A):
    n = len(x)
    norm = 0.
    for i in range(n):
        norm = norm + A[i]*abs(x[i])

    return norm

#==================================================================================================================================#
#
#==================================================================================================================================#
def norm2(x):
    n = len(x)
    norm = 0.
    for i in range(n):
        norm = norm + x[i]**2
    norm = np.sqrt(norm)

    return norm

#==================================================================================================================================#
#
#==================================================================================================================================#
def normL2(x,A):
    n = len(x)
    norm = 0.
    for i in range(n):
        norm = norm + A[i]*x[i]**2
    norm = np.sqrt(norm)

    return norm

#==================================================================================================================================#
#
#==================================================================================================================================#
def norm_maxes(norms):
    max = [ np.amax(norm) for norm in norms ]
    return max

def norm_mins(norms):
    min = [ np.amin(norm) for norm in norms ]
    return min

def pow10(x):
    pow = math.floor(math.log10(x))
    r = x/10.**pow
    return pow, r

def logbnd_up(x,pad=0.):
    pow, r = pow10(x)
    y = math.ceil(r) + pad
    if y>=10:
        y=max(y-10,1)
        pow=pow+1
    y *= 10.**pow
    return y

def logbnd_low(x,pad=0.):
    pow, r = pow10(x)
    y = math.floor(r) - pad
    if y<=0:
        y=y+10
        pow=pow-1
    y *= 10.**pow
    return y
